package tests;

import java.util.List;

import enums.TypeServiceEnum;
import model.TypeService;
import repository.TypeServiceRepository;

public class testTypeServiceRepository {
	public static void main(String[] args) {
		TypeServiceRepository repository = TypeServiceRepository.getInstance();

		System.out.println("\n========== TEST TYPE SERVICE REPOSITORY ==========\n");

		// 1Ô∏è‚É£ Th√™m m·ªõi lo·∫°i d·ªãch v·ª•
		TypeService newTypeService = new TypeService(0, TypeServiceEnum.VIP); // ID s·∫Ω ƒë∆∞·ª£c t·ª± ƒë·ªông g√°n sau khi insert
		int inserted = repository.insert(newTypeService);
		System.out.println("üü¢ [INSERT] Th√™m lo·∫°i d·ªãch v·ª•: " + (inserted > 0 ? "TH√ÄNH C√îNG" : "TH·∫§T B·∫†I"));

		// 2Ô∏è‚É£ L·∫•y danh s√°ch t·∫•t c·∫£ lo·∫°i d·ªãch v·ª•
		List<TypeService> services = repository.selectAll();
		System.out.println("\nüìå [SELECT ALL] Danh s√°ch lo·∫°i d·ªãch v·ª•:");
		if (services.isEmpty()) {
			System.out.println("‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu.");
		} else {
			for (TypeService service : services) {
				System.out.println(" - ID: " + service.getTypeServiceID() + " | Name: "
						+ service.getTypeServiceName().getDescription());
			}
		}

		// 3Ô∏è‚É£ C·∫≠p nh·∫≠t lo·∫°i d·ªãch v·ª•
		if (!services.isEmpty()) {
			TypeService firstService = services.get(0);
			firstService.setTypeServiceName(TypeServiceEnum.VIP); // C·∫≠p nh·∫≠t sang "Bathing"
			int updated = repository.update(firstService);
			System.out.println("\nüü° [UPDATE] C·∫≠p nh·∫≠t lo·∫°i d·ªãch v·ª• ID " + firstService.getTypeServiceID() + ": "
					+ (updated > 0 ? "TH√ÄNH C√îNG" : "TH·∫§T B·∫†I"));
		} else {
			System.out.println("\n‚ö†Ô∏è Kh√¥ng c√≥ d·ªãch v·ª• n√†o ƒë·ªÉ c·∫≠p nh·∫≠t.");
		}

		// 4Ô∏è‚É£ T√¨m ki·∫øm lo·∫°i d·ªãch v·ª• theo ID
		if (!services.isEmpty()) {
			int idToFind = services.get(0).getTypeServiceID();
			TypeService foundService = repository.selectById(idToFind);
			System.out.println("\nüîç [SELECT BY ID] T√¨m lo·∫°i d·ªãch v·ª• ID " + idToFind + ": "
					+ (foundService != null ? foundService.getTypeServiceName().getDescription() : "KH√îNG T√åM TH·∫§Y"));
		} else {
			System.out.println("\n‚ö†Ô∏è Kh√¥ng c√≥ d·ªãch v·ª• n√†o ƒë·ªÉ t√¨m ki·∫øm.");
		}

		// 5Ô∏è‚É£ X√≥a lo·∫°i d·ªãch v·ª•
		if (!services.isEmpty()) {
			TypeService lastService = services.get(services.size() - 1);
			int deleted = repository.delete(lastService);
			System.out.println("\nüî¥ [DELETE] X√≥a lo·∫°i d·ªãch v·ª• ID " + lastService.getTypeServiceID() + ": "
					+ (deleted > 0 ? "TH√ÄNH C√îNG" : "TH·∫§T B·∫†I"));
		} else {
			System.out.println("\n‚ö†Ô∏è Kh√¥ng c√≥ d·ªãch v·ª• n√†o ƒë·ªÉ x√≥a.");
		}

		System.out.println("\n========== TEST K·∫æT TH√öC ==========");
	}
}
